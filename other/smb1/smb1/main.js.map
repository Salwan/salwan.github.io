{"version":3,"sources":["main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/// <reference path=\"../phaser262/typescript/phaser.d.ts\" />\r\n\r\nimport '../phaser262/build/phaser.min.js';\r\n\r\nconst WIDTH     = 512.0;\r\nconst HEIGHT    = 480.0;\r\nconst RESMULX   = 2.0;\r\nconst RESMULY   = 2.0;\r\nconst GRAVITY   = 16 * 220;\r\nconst MAX_SPEED = 16 * 40;\r\n\r\nconst COLOR_SKY     = 0x5c94fc;\r\nconst COLOR_BLACK   = 0x000000;\r\nconst COLOR_WHITE   = 0xffffff;\r\n\r\n\r\nconst debugMode             = false;\r\nconst enableDebugBar        = true;\r\nconst enableFPS             = true;\r\nlet debugBar:   Phaser.Text = null;\r\n\r\nlet phaser:     Phaser.Game = null;\r\nlet gamepad1:   Phaser.SinglePad = null; // First GamePad\r\nlet sfx = {\r\n    coin: null,\r\n    bump: null,\r\n    jump: null,\r\n};\r\n\r\n////////////////////////////////////////////////////// Utils\r\nfunction clamp(num, min, max):number {\r\n  return num <= min ? min : num >= max ? max : num;\r\n}\r\n\r\n////////////////////////////////////////////////////// SMBGame\r\nclass SMBGame {\r\n    static instance:SMBGame         = null;\r\n    \r\n    currentScene:   Scene           = null; \r\n    gameSession:    GameSession     = null;\r\n    player:         Player          = null;\r\n    gamepadBtn1:    number          = 0;        // Defaults to Button 1\r\n    gamepadBtn2:    number          = 1;        // Defaults to Button 2\r\n    keyboardBtn1:   number          = 90;       // Defaults to 'z' keycode\r\n    keyboardBtn2:   number          = 88;       // Defaults to 'x' keycode\r\n    fpsText:        Phaser.Text     = null;\r\n\r\n    public constructor() {\r\n        SMBGame.instance = this;\r\n        phaser = new Phaser.Game(WIDTH, HEIGHT, Phaser.AUTO, 'content', { \r\n            preload: () => { this.preload(); },\r\n            create: () => { this.create(); },\r\n            update: () => { this.update(); }, \r\n            render: () => { this.render(); } \r\n        }, false, false);\r\n    }\r\n\r\n    public preload() {\r\n        phaser.stage.backgroundColor = COLOR_SKY;\r\n        phaser.load.image('logo', './smb1/assets/title.fw.png');\r\n        phaser.load.bitmapFont('smb', './smb1/assets/fonts/emulogic_0.png', './smb1/assets/fonts/emulogic.fnt');\r\n        phaser.load.audio('coin', './smb1/assets/sfx/smb_coin.wav');\r\n        phaser.load.audio('bump', './smb1/assets/sfx/smb_bump.wav');\r\n        phaser.load.audio('jump', './smb1/assets/sfx/smb_jump-small.wav');\r\n        phaser.load.atlas('smb1atlas', './smb1/assets/sprites/smb1atlas.png', './smb1/assets/sprites/smb1atlas.json');\r\n        \r\n        phaser.load.tilemap('level11', './smb1/assets/levels/world11.json', null, Phaser.Tilemap.TILED_JSON);\r\n        phaser.load.image('level1_ss', './smb1/assets/levels/world11.png');\r\n    }\r\n\r\n    public create():void {\r\n        // Init sound effects\r\n        sfx.coin =          phaser.add.audio('coin');\r\n        sfx.bump =          phaser.add.audio('bump');\r\n        sfx.jump =    phaser.add.audio('jump');\r\n        // Gamepad\r\n        phaser.input.gamepad.start();\r\n        if(phaser.input.gamepad.supported && phaser.input.gamepad.active) {\r\n            gamepad1 = phaser.input.gamepad.pad1;\r\n        }\r\n        \r\n        // Debug text at top for emitting continuous debug info (more effective than using console)\r\n        if(enableDebugBar) {\r\n            debugBar = phaser.add.text(1, 1, \"\", {font: \"bold 11px Lucida Console\", fill: \"#fff\"});\r\n            debugBar.setShadow(1, 1, 'rgba(0, 0, 0, 0.5)', 0);\r\n            debugBar.wordWrap = true;\r\n            debugBar.wordWrapWidth = WIDTH - 2;\r\n            debugBar.lineSpacing = -7;\r\n            debugBar.fixedToCamera = true;\r\n        }\r\n        if(enableFPS) {\r\n            this.fpsText = phaser.add.text(WIDTH - 16, 1, \"00\", {font: \"bold 11px Lucida Console\", fill: '#fcbcb0'});\r\n            this.fpsText.setShadow(1, 1, '#000', 0);\r\n            this.fpsText.fixedToCamera = true;\r\n            phaser.time.advancedTiming = true;\r\n        }\r\n        \r\n        // Start scene\r\n        let start_screen:StartScreen = new StartScreen(this);\r\n        this.changeScene(start_screen);\r\n    }\r\n\r\n    public update():void {\r\n        // Update fps\r\n        if(enableFPS) {\r\n            this.fpsText.text = Math.floor(phaser.time.fps).toString();\r\n        }\r\n        // Update gamepad1\r\n        if(phaser.input.gamepad.supported && phaser.input.gamepad.active && phaser.input.gamepad.pad1.connected) {\r\n            gamepad1 = phaser.input.gamepad.pad1;\r\n        } else {\r\n            gamepad1 = null;\r\n        }\r\n        // Update scene\r\n        if(this.currentScene) {\r\n            this.currentScene.update();\r\n        }\r\n    }\r\n\r\n    public render():void {\r\n        if(this.currentScene) {\r\n            this.currentScene.render();\r\n        }\r\n    }\r\n    \r\n    public changeScene(scene:Scene):void {\r\n        if(scene) {\r\n            if(this.currentScene) {\r\n                this.currentScene.destroy();\r\n            }\r\n            phaser.world.removeAll();\r\n            phaser.stage.backgroundColor = COLOR_BLACK;\r\n            phaser.world.visible = false; // Blank before create\r\n            this.currentScene = null;\r\n            // What happens if another change happens before the one already scheduled? (unlikely but a 100% will happen at least once)\r\n            // IF a cross-scene timer was ever needed, this might cause an issue. Remember.\r\n            // Better to replace with a crude update timer?\r\n            phaser.time.events.removeAll();\r\n            // Fake blank screen for 0.2 second (polish element)\r\n            let t = phaser.time.events.add(0.2 * 1000, () => { \r\n                scene.create(); \r\n                if(debugBar) {\r\n                    phaser.world.addChild(debugBar);\r\n                }\r\n                if(this.fpsText) {\r\n                    phaser.world.addChild(this.fpsText); \r\n                }\r\n                phaser.world.visible = true;\r\n                this.currentScene = scene;\r\n            });\r\n        }\r\n    }\r\n    \r\n    public startGame():void {\r\n        this.player = new Player();\r\n        this.gameSession = new GameSession(this.player);\r\n        let info_screen:InfoScreen = new InfoScreen(this, this.gameSession);\r\n        this.changeScene(info_screen);\r\n    }\r\n    \r\n    public startLevel():void {\r\n        let level_scene:LevelScene = new LevelScene(this, this.gameSession);\r\n        this.changeScene(level_scene);\r\n    }\r\n};\r\n\r\n////////////////////////////////////////////////////// GameSession\r\nclass GameSession {\r\n    public world: number;\r\n    public stage: number;\r\n    public player: Player;\r\n    \r\n    constructor(_player) {\r\n        this.world = 1;\r\n        this.stage = 1;\r\n        this.player = _player;\r\n    }\r\n};\r\n\r\n////////////////////////////////////////////////////// Player\r\nclass Player {\r\n    score: number;\r\n    coins: number;\r\n    lives: number;\r\n    \r\n    constructor() {\r\n        this.score = 0;\r\n        this.coins = 0;\r\n        this.lives = 3;\r\n    }\r\n};\r\n\r\n////////////////////////////////////////////////////// Scenes\r\nclass Scene {\r\n    smbGame:SMBGame;\r\n    constructor(smb_game:SMBGame) { this.smbGame = smb_game; };\r\n    public create():void { };\r\n    public update():void { };\r\n    public render():void { };\r\n    public destroy():void { };\r\n};\r\n\r\n///////////////////////////// StartScreen\r\nclass StartScreen extends Scene {\r\n    btn2Text:       Phaser.BitmapText   = null;\r\n    boundBtn1:      boolean             = false;\r\n    originalKBOwner:any;\r\n    \r\n    public create():void {\r\n        phaser.stage.backgroundColor = 0x5c94fc;\r\n        \r\n        let logo = phaser.add.sprite(phaser.world.centerX, phaser.world.centerY, 'logo');\r\n        logo.anchor.setTo(0.5, 1.0);\r\n        logo.scale.setTo(2.0, 2.0);\r\n        \r\n        let copyright_txt = phaser.add.bitmapText(104 * RESMULX, 119 * RESMULY, 'smb', '\\xA91985 NINTENDO', 12 * RESMULX);\r\n        copyright_txt.tint = 0xfcbcb0;\r\n        phaser.add.bitmapText(18 * RESMULX, 142 * RESMULY, 'smb', 'PRESS-BIND BUTTON 1 = ACTION', 12 * RESMULX);\r\n        \r\n        this.btn2Text = phaser.add.bitmapText(24 * RESMULX, 154 * RESMULY, 'smb', 'PRESS-BIND BUTTON 2 = JUMP', 12 * RESMULX);\r\n        this.btn2Text.visible = false;\r\n        \r\n        this.originalKBOwner = phaser.input.keyboard.onDownCallback;\r\n        phaser.input.keyboard.onDownCallback = () => { this.onAnyKeyDown(); };\r\n    }\r\n    \r\n    public update():void {\r\n        if(gamepad1) {\r\n            for(let ib = 0; ib < 4; ++ib) {\r\n                if(gamepad1.isDown(ib)) {\r\n                    if(!this.boundBtn1) {\r\n                        // Action\r\n                        this.smbGame.gamepadBtn1 = ib;\r\n                        this.boundBtn1 = true;\r\n                        this.btn2Text.visible = true;\r\n                        sfx.bump.play();\r\n                    } else {\r\n                        // Jump\r\n                        if(ib !== this.smbGame.gamepadBtn1) {\r\n                            this.smbGame.gamepadBtn2 = ib;\r\n                            this.startGame();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    public onAnyKeyDown() {\r\n        let kc:number = phaser.input.keyboard.lastKey.keyCode;\r\n        if(!this.boundBtn1) {\r\n            this.smbGame.keyboardBtn1 = kc;\r\n            this.boundBtn1 = true;\r\n            this.btn2Text.visible = true;\r\n            sfx.bump.play();\r\n        } else {\r\n            if(kc !== this.smbGame.keyboardBtn1) {\r\n                this.smbGame.keyboardBtn2 = kc;\r\n                this.startGame();\r\n            }\r\n        }\r\n    }\r\n    \r\n    public startGame():void {\r\n        phaser.input.keyboard.onDownCallback = this.originalKBOwner;\r\n        sfx.coin.play();\r\n        this.smbGame.startGame();\r\n    }\r\n};\r\n\r\n////////////////////////////// InfoScreen\r\nclass InfoScreen extends Scene {\r\n    gameSession: GameSession;\r\n    \r\n    constructor(smb_game:SMBGame, game_session:GameSession) {\r\n        super(smb_game);\r\n        this.gameSession = game_session;\r\n    }\r\n    \r\n    public create():void {\r\n        phaser.stage.backgroundColor = 0x000000;\r\n        \r\n        // Name and Score\r\n        let score_txt = this.gameSession.player.score.toString();\r\n        while(score_txt.length < 6) {\r\n            score_txt = '0' + score_txt;\r\n        }\r\n        phaser.add.bitmapText(24 * RESMULX, 14 * RESMULY, 'smb', 'MARIO', 12 * RESMULX);\r\n        phaser.add.bitmapText(24 * RESMULX, 22 * RESMULY, 'smb', score_txt, 12 * RESMULX);\r\n        \r\n        // Coins\r\n        let coin:Phaser.Sprite = phaser.add.sprite(89 * RESMULX, 24 * RESMULY, 'smb1atlas');\r\n        coin.scale.set(2.0);\r\n        let fnames:Array<string> = Phaser.Animation.generateFrameNames('scoin0_', 0, 2, '.png');\r\n        fnames.push('scoin0_1.png');\r\n        fnames.push('scoin0_0.png');\r\n        coin.animations.add('bling', fnames, 5, true);\r\n        coin.animations.play('bling');\r\n        let coins_txt = this.gameSession.player.coins.toString();\r\n        if(coins_txt.length < 2) {\r\n            coins_txt = '0' + coins_txt;\r\n        }\r\n        coins_txt = 'x' + coins_txt;\r\n        phaser.add.bitmapText(96 * RESMULX, 22 * RESMULY, 'smb', coins_txt, 12 * RESMULX);\r\n        \r\n        // World\r\n        let stage_txt:string = this.gameSession.world.toString() + '-' + this.gameSession.stage.toString();\r\n        phaser.add.bitmapText(144 * RESMULX, 14 * RESMULY, 'smb', 'WORLD', 12 * RESMULX);\r\n        phaser.add.bitmapText(152 * RESMULX, 22 * RESMULY, 'smb', stage_txt, 12 * RESMULX);\r\n        phaser.add.bitmapText(87 * RESMULX, 78 * RESMULY, 'smb', 'WORLD ' + stage_txt, 12 * RESMULX);\r\n        \r\n        // Time\r\n        phaser.add.bitmapText(200 * RESMULX, 14 * RESMULY, 'smb', 'TIME', 12 * RESMULX);\r\n        \r\n        // Mario x lives\r\n        let mario:Phaser.Sprite = phaser.add.sprite(97 * RESMULX, 105 * RESMULY, 'smb1atlas');\r\n        mario.scale.set(2.0);\r\n        mario.frameName = 'smario0_0.png';\r\n        phaser.add.bitmapText(120 * RESMULX, 110 * RESMULY, \r\n            'smb', 'x  ' + this.gameSession.player.lives.toString(), 12 * RESMULX);\r\n            \r\n        // Timer for starting level\r\n        phaser.time.events.add(3.0 * 1000, () => { this.smbGame.startLevel(); });\r\n    }\r\n};\r\n\r\n///////////////////////////// LevelScene\r\nconst LAYER_BLOCKS              = \"BLOCKS\";\r\nconst LAYER_BG                  = \"BG\";\r\nconst LAYER_ITEMS               = \"ITEMS\";\r\nconst BLOCK_ITEM                = 8;\r\nconst BLOCK_BRICK               = 54;\r\nconst ITEM_GROWTH               = 66;\r\nconst ITEM_LIFE                 = 67;\r\nconst ITEM_FLOWER               = 68;\r\nconst ITEM_COIN                 = 69;\r\nconst BUMP_DISTANCE             = 8;\r\n\r\nclass ActiveBlock {\r\n    level:      LevelScene;\r\n    tile:       Phaser.Tile;\r\n    sprite:     Phaser.Sprite;\r\n    tween:      Phaser.Tween;\r\n    \r\n    constructor(_level:LevelScene, _tile:Phaser.Tile, _group:Phaser.Group) {\r\n        this.level = _level;\r\n        this.tile = _tile;\r\n        this.tween = null;\r\n        this.sprite = null;\r\n\r\n        this._createSprite(_group);\r\n    } \r\n    \r\n    private _createSprite(_group:Phaser.Group): void {\r\n        if(this.tile.index === BLOCK_ITEM) {\r\n            this.sprite = phaser.add.sprite(this.tile.x * 32, this.tile.y * 32, 'smb1atlas', 'itemtile0.png', _group);\r\n            this.sprite.scale.set(2.0);\r\n            let frs:Array<string> = [\"itemtile0.png\", \"itemtile1.png\", \"itemtile2.png\", 'itemtile1.png', 'itemtile0.png'];\r\n            this.sprite.animations.add('bling', frs, 5, true);\r\n            this.sprite.animations.add('solid', [\"solidtile0.png\"]);\r\n            this.sprite.animations.play('bling'); \r\n        } else if(this.tile.index === BLOCK_BRICK) {\r\n            this.sprite = phaser.add.sprite(this.tile.x * 32, this.tile.y * 32, 'smb1atlas', 'bricktile0.png', _group);\r\n            this.sprite.scale.set(2.0);\r\n        }\r\n        this.tile.alpha = 0.0;\r\n        this.tile.properties.activeBlock = this;\r\n    }\r\n    \r\n    public hit(by_actor:any):void {\r\n        if(this.tile.index === BLOCK_ITEM) {\r\n            if(this.sprite.animations.currentAnim.name !== 'solid') {\r\n                this.sprite.animations.play('solid');\r\n                this._bumpBlock();\r\n                this.level.activateItem(this.tile);\r\n            } else {\r\n                // Do nothing, block solid\r\n            }\r\n        } else if(this.tile.index === BLOCK_BRICK) {\r\n            this._bumpBlock();\r\n            this.level.activateItem(this.tile);\r\n        }\r\n    }\r\n    \r\n    private _bumpBlock():void {\r\n        if(this.tween) {\r\n            this.tween.stop(true);\r\n            this.sprite.y = this.tile.y * 32;\r\n        }\r\n        this.tween = phaser.add.tween(this.sprite).to({y: this.sprite.y - BUMP_DISTANCE}, 100, \"Linear\", true, 0, 0, true);\r\n    }\r\n};\r\n\r\nclass LevelScene extends Scene {\r\n    gameSession:        GameSession;\r\n    \r\n    hudScore:           Phaser.BitmapText;\r\n    hudCoins:           Phaser.BitmapText;\r\n    hudTime:            Phaser.BitmapText;\r\n    \r\n    tilemap:            Phaser.Tilemap;\r\n    objectsLayer:       Phaser.TilemapLayer;\r\n    blocksLayer:        Phaser.TilemapLayer;\r\n    BGLayer:            Phaser.TilemapLayer;\r\n    hudGroup:           Phaser.Group;\r\n    mario:              Mario;\r\n    activeBlocks:       Array<ActiveBlock>;\r\n    questionMarksGroup: Phaser.Group;\r\n    \r\n    kbUp:               Phaser.Key;\r\n    kbDown:             Phaser.Key;\r\n    kbLeft:             Phaser.Key;\r\n    kbRight:            Phaser.Key;\r\n    kbUp2:              Phaser.Key;      // For own sanity, WSAD will be added as secondary cursors\r\n    kbDown2:            Phaser.Key;\r\n    kbLeft2:            Phaser.Key;\r\n    kbRight2:           Phaser.Key;\r\n    kb1:                Phaser.Key;\r\n    kb2:                Phaser.Key;\r\n    \r\n    constructor(smb_game:SMBGame, game_session:GameSession) {\r\n        super(smb_game);\r\n        this.gameSession = game_session;\r\n    }\r\n    \r\n    public create():void {\r\n        phaser.stage.backgroundColor = COLOR_SKY;\r\n        \r\n        // HUD Group\r\n        this.hudGroup = phaser.add.group(undefined, 'hud', true);\r\n        \r\n        // HUD / MARIO\r\n        let score_txt = this.gameSession.player.score.toString();\r\n        while(score_txt.length < 6) {\r\n            score_txt = '0' + score_txt;\r\n        }\r\n        phaser.add.bitmapText(24 * RESMULX, 14 * RESMULY, 'smb', 'MARIO', 12 * RESMULX, this.hudGroup);\r\n        this.hudScore = phaser.add.bitmapText(24 * RESMULX, 22 * RESMULY, 'smb', score_txt, 12 * RESMULX, this.hudGroup);\r\n        \r\n        // HUD / COINS\r\n        let coin:Phaser.Sprite = phaser.add.sprite(89 * RESMULX, 24 * RESMULY, 'smb1atlas', undefined, this.hudGroup);\r\n        coin.scale.set(RESMULX, RESMULY);\r\n        let fnames:Array<string> = Phaser.Animation.generateFrameNames('scoin0_', 0, 2, '.png');\r\n        fnames.push('scoin0_1.png');\r\n        fnames.push('scoin0_0.png');\r\n        coin.animations.add('bling', fnames, 5, true);\r\n        coin.animations.play('bling');\r\n        let coins_txt = this.gameSession.player.coins.toString();\r\n        if(coins_txt.length < 2) {\r\n            coins_txt = '0' + coins_txt;\r\n        }\r\n        coins_txt = 'x' + coins_txt;\r\n        this.hudCoins = phaser.add.bitmapText(96 * RESMULX, 22 * RESMULY, 'smb', coins_txt, 12 * RESMULX, this.hudGroup);\r\n        \r\n        // HUD / WORLD\r\n        let stage_txt:string = this.gameSession.world.toString() + '-' + this.gameSession.stage.toString();\r\n        phaser.add.bitmapText(144 * RESMULX, 14 * RESMULY, 'smb', 'WORLD', 12 * RESMULX, this.hudGroup);\r\n        phaser.add.bitmapText(152 * RESMULX, 22 * RESMULY, 'smb', stage_txt, 12 * RESMULX, this.hudGroup);\r\n        \r\n        // HUD / TIME\r\n        this.hudTime = phaser.add.bitmapText(200 * RESMULX, 14 * RESMULY, 'smb', 'TIME', 12 * RESMULX, this.hudGroup);\r\n        \r\n        // LOAD LEVEL\r\n        this.tilemap = phaser.add.tilemap('level11');\r\n        this.tilemap.addTilesetImage('main', 'level1_ss');\r\n        this.BGLayer = this.tilemap.createLayer(LAYER_BG);\r\n        this.BGLayer.setScale(2.0);\r\n        this.blocksLayer = this.tilemap.createLayer(LAYER_BLOCKS);\r\n        this.blocksLayer.setScale(2.0);\r\n        \r\n        // INIT PHYSICS\r\n        phaser.physics.startSystem(Phaser.Physics.ARCADE);\r\n        phaser.physics.arcade.gravity.y = GRAVITY;\r\n        phaser.physics.arcade.enable(this.blocksLayer);\r\n        // - collision for Blocks Layer\r\n        this.tilemap.setCollisionBetween(0, 10000, true, this.blocksLayer);\r\n        this.blocksLayer.resizeWorld();\r\n        if(debugMode) {\r\n            this.blocksLayer.debug = true;\r\n        }\r\n        \r\n        // Objects: SPAWNER\r\n        this.activeBlocks = new Array<ActiveBlock>();\r\n        this.questionMarksGroup = phaser.add.group(undefined, 'questionMarks');\r\n        let blocks_layer = this.tilemap.getLayerIndex(LAYER_BLOCKS);\r\n        let les_blocks = this.tilemap.layers[blocks_layer];\r\n        {\r\n            // Object returned isn't TilemapLayer but it isn't exactly BLOCKS from the json file.\r\n            // It has the basic width/height x/y visible properties and a data array of 15 arrays\r\n            // each 128 Tile object.\r\n            // These the properties in Layer object:\r\n            // alpha=1, bodies=[], callbacks=[], data=[array of arrays 15*128], dirty=false, height=15, heightInPixels=240\r\n            // indexes=[], name=\"BLOCKS\", properties=__proto__, visible=true, width=128, widthInPixels=2048, x=0, y=0\r\n            for(let r = 0; r < les_blocks.height; ++r) {\r\n                for(let c = 0; c < les_blocks.width; ++c) {\r\n                    let qb:Phaser.Tile = les_blocks.data[r][c];\r\n                    if(!qb) {\r\n                        console.log(\"Retrieved data tile from les_blocks is invalid.\");\r\n                    } else if(qb.index === BLOCK_BRICK || qb.index === BLOCK_ITEM) {\r\n                        // Creates cover sprite if needed. Registers active object handler.\r\n                        this.activeBlocks.push(new ActiveBlock(this, qb, this.questionMarksGroup));\r\n                    }\r\n                }\r\n            }\r\n            console.log(\"Active blocks count: \" + this.activeBlocks.length);\r\n        }\r\n        \r\n        // Objects: OBJECTS and player spawn\r\n        let les_objects = this.tilemap.objects['OBJECTS'];\r\n        let player_spawn = null;\r\n        for(let ob of les_objects) {\r\n            if(ob.name === \"mario\") {\r\n                player_spawn = ob;\r\n                break;\r\n            }\r\n        }\r\n        if(!player_spawn) {\r\n            console.log(\"ERROR: No player spawn found in tilemap objects!\");\r\n            throw new Error(\"No player spawn found in tilemap objects!\");\r\n        }\r\n        player_spawn.tx = Math.floor(player_spawn.x / 16.0);\r\n        player_spawn.ty = Math.floor(player_spawn.y / 16.0);\r\n        \r\n        this.mario = new Mario(player_spawn, this, this.tilemap);\r\n        \r\n        // CAMERA\r\n        phaser.camera.follow(this.mario.sprite);\r\n        \r\n        // INPUT\r\n        this.kbUp = phaser.input.keyboard.addKey(Phaser.Keyboard.UP);\r\n        this.kbUp2 = phaser.input.keyboard.addKey(Phaser.Keyboard.W);\r\n        this.kbDown = phaser.input.keyboard.addKey(Phaser.Keyboard.DOWN);\r\n        this.kbDown2 = phaser.input.keyboard.addKey(Phaser.Keyboard.S);\r\n        this.kbLeft = phaser.input.keyboard.addKey(Phaser.Keyboard.LEFT);\r\n        this.kbLeft2 = phaser.input.keyboard.addKey(Phaser.Keyboard.A);\r\n        this.kbRight = phaser.input.keyboard.addKey(Phaser.Keyboard.RIGHT);\r\n        this.kbRight2 = phaser.input.keyboard.addKey(Phaser.Keyboard.D);\r\n        this.kb1 = phaser.input.keyboard.addKey(this.smbGame.keyboardBtn1);\r\n        this.kb2 = phaser.input.keyboard.addKey(this.smbGame.keyboardBtn2);\r\n    }\r\n    \r\n    public destroy():void {\r\n        this.hudGroup.destroy();\r\n    }\r\n    \r\n    public update():void {\r\n        phaser.physics.arcade.collide(this.mario.sprite, this.blocksLayer);\r\n        \r\n        let in_right = this.kbRight.isDown || this.kbRight2.isDown || (gamepad1 && gamepad1.axis(0) > 0.0);\r\n        let in_left = this.kbLeft.isDown || this.kbLeft2.isDown || (gamepad1 && gamepad1.axis(0) < 0.0);\r\n        let in_action = this.kb1.isDown || (gamepad1 && gamepad1.isDown(this.smbGame.gamepadBtn1));\r\n        let in_jump = this.kb2.isDown || (gamepad1 && gamepad1.isDown(this.smbGame.gamepadBtn2));\r\n        \r\n        this.mario.update(in_right, in_left, in_jump, in_action);\r\n    }\r\n    \r\n    public render():void {\r\n        if(debugMode) {\r\n            this.mario.debugRender();\r\n        }\r\n    }\r\n    \r\n    private get HUDCoins(): number { return this.gameSession.player.coins; }\r\n    private set HUDCoins(_coins:number) { \r\n        this.gameSession.player.coins = _coins;\r\n        let coins_txt:string = _coins.toString();\r\n        if(coins_txt.length < 2) {\r\n            coins_txt = '0' + coins_txt;\r\n        }\r\n        this.hudCoins.text = \"x\" + coins_txt;\r\n    }\r\n    \r\n    public giveCoin():void {\r\n        this.HUDCoins += 1;\r\n        sfx.coin.play();\r\n    }\r\n    \r\n    public activateItem(_blockTile: Phaser.Tile): void {\r\n        // - Get ITEMS layer index\r\n        let items_layer = this.tilemap.getLayerIndex(LAYER_ITEMS);\r\n        // - Check ITEMS layer index for special or -1\r\n        let item_index: number = this.tilemap.getTile(_blockTile.x, _blockTile.y, items_layer, true).index;\r\n        if(item_index === -1) {\r\n            // - If -1 and item is question block then default to single coin\r\n            if(_blockTile.index === BLOCK_ITEM) {\r\n                this.giveCoin();\r\n            }\r\n        } else {\r\n            console.log(\"Item activated! \" + item_index);\r\n            if(item_index === ITEM_COIN) {\r\n                this.giveCoin();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n//----------------- MARIO\r\nconst MARIO_WALK_SPEED          = 16 * 12;\r\nconst MARIO_WALK_ACCEL          = 16 * 20;\r\nconst MARIO_RUN_SPEED           = 16 * 18;\r\nconst MARIO_RUN_ACCEL           = 16 * 18;\r\nconst MARIO_WALK_FPS            = 15;\r\nconst MARIO_RUN_FPS             = 30;\r\nconst MARIO_BRAKING_ACCEL_MUL   = 3;\r\nconst MARIO_JUMP_FORCE_DURATION = 0.33;\r\n\r\nclass Mario {\r\n    name:               string;\r\n    startObject:        any; // x, y: player spawn coords.\r\n    level:              LevelScene;\r\n    tilemap:            Phaser.Tilemap;\r\n    sprite:             Phaser.Sprite;\r\n    horizMovement:      number;\r\n    jumpInput:          boolean;\r\n    jumpInputHit:       boolean;\r\n    jumpInputHeld:      boolean;\r\n    jumpTime:           number;\r\n    actionInput:        boolean;\r\n    isJumping:          boolean;\r\n    isFalling:          boolean;\r\n    hspeed:             number;     // Horizontal linear speed\r\n    vspeed:             number;     // Vertical linear speed\r\n    fspeed:             number;     // Animation frames speed\r\n    \r\n    constructor(start_object, _level, _tilemap) {\r\n        this.name = \"mario\";\r\n        this.startObject = start_object;\r\n        this.level = _level;\r\n        this.tilemap = _tilemap;\r\n        // Sprite and Animations\r\n        this.sprite = phaser.add.sprite(this.startObject.x * RESMULX + 16, this.startObject.y * RESMULY + 32, 'smb1atlas');\r\n        this.sprite.anchor.set(0.5, 1.0);\r\n        this.sprite.scale.set(2.0);\r\n        this.sprite.frameName = 'smario0_0.png';\r\n        // Physics\r\n        phaser.physics.enable(this.sprite, Phaser.Physics.ARCADE);\r\n        this.sprite.body.collideWorldBounds = true;\r\n        this.sprite.body.setSize(16, 16, 0, 0);\r\n        // - idle\r\n        this.sprite.animations.add('idle', ['smario0_0.png'], 0);\r\n        // - running\r\n        let frs:Array<string> = Phaser.Animation.generateFrameNames('smario0_', 3, 5, '.png');\r\n        frs.push('smario0_4.png');\r\n        this.sprite.animations.add('run', frs, MARIO_WALK_FPS, true);\r\n        // - braking\r\n        this.sprite.animations.add('brake', ['smario0_2.png'], 0);\r\n        // - jumping\r\n        this.sprite.animations.add('jump', ['smario0_6.png'], 0);\r\n        // - initial\r\n        this.sprite.animations.play('idle');\r\n        \r\n        // - Locomotion\r\n        this.horizMovement = 0.0;\r\n        this.jumpInput = false;\r\n        this.jumpInputHit = false;\r\n        this.jumpInputHeld = false;\r\n        this.jumpTime = 0.0;\r\n        this.isJumping = false;\r\n        this.isFalling = false;\r\n        this.hspeed = 0.0;\r\n        this.vspeed = 0.0;\r\n        this.fspeed = 0.0;\r\n    }\r\n    \r\n    public update(in_right, in_left, in_jump, in_action):void {\r\n        if(in_right) {\r\n            this.horizMovement = 1.0;\r\n        } else if (in_left) {\r\n            this.horizMovement = -1.0;\r\n        } else {\r\n            this.horizMovement = 0.0;\r\n        }\r\n        if(!this.jumpInput && in_jump) {\r\n            this.jumpInputHit = true;\r\n        } else {\r\n            this.jumpInputHit = false;\r\n        }\r\n        this.jumpInput = in_jump;\r\n        this.actionInput = in_action;\r\n        this.runLocomotion();\r\n    }\r\n    \r\n    // Locomotion:\r\n    protected runLocomotion():void {\r\n        // Blocked Left/Right/Up/Down\r\n        let is_lblocked = this.sprite.body.blocked.left;\r\n        let is_rblocked = this.sprite.body.blocked.right;\r\n        let is_ublocked = this.sprite.body.blocked.up;\r\n        let is_dblocked = this.sprite.body.blocked.down;\r\n        \r\n        // Braking\r\n        let is_braking = false;\r\n        if((this.hspeed > 0.0 && this.horizMovement < 0.0) || (this.hspeed < 0.0 && this.horizMovement > 0.0)) {\r\n            is_braking = true;\r\n        }\r\n        \r\n        // Jumping\r\n        if(this.jumpInputHit && is_dblocked && !this.isJumping && this.sprite.animations.name !== 'jump') {\r\n            this.isJumping = true;\r\n            this.jumpInputHeld = true;\r\n            this.jumpTime = 0.0;\r\n            this.sprite.body.velocity.y = -MAX_SPEED;\r\n            sfx.jump.play();\r\n        }\r\n        if(this.isJumping) {\r\n            if(!this.isFalling) {\r\n                this.jumpTime = Math.min(MARIO_JUMP_FORCE_DURATION, this.jumpTime + phaser.time.physicsElapsed);\r\n                if(this.jumpInputHeld) {\r\n                    if(!this.jumpInput) {\r\n                        this.jumpInputHeld = false;\r\n                    } else if(this.jumpTime < MARIO_JUMP_FORCE_DURATION) {\r\n                        // This allows velocity force to apply as long as the button is held for MARIO_JUMP_FORCE_DURATION seconds.\r\n                        // Modify this to introduce higher jumps when sprinting.\r\n                        this.sprite.body.velocity.y = -MAX_SPEED + (MAX_SPEED * 0.5 * (this.jumpTime / MARIO_JUMP_FORCE_DURATION));\r\n                    }\r\n                }\r\n                if(is_ublocked) {\r\n                    let b_sfx_bump = true;\r\n                    this.sprite.body.velocity.y = 0.0;\r\n                    // Player hit something above\r\n                    // - Convert player position to tile coords using mid-point\r\n                    let tx = Math.floor(this.sprite.body.center.x / (this.tilemap.tileWidth * 2));\r\n                    let ty = Math.floor(this.sprite.body.center.y / (this.tilemap.tileHeight * 2));\r\n                    if(ty > 0) { // Cause we are going to be searching up ^^\r\n                        // - Find out what's on top of player \r\n                        let blocks_layer = this.tilemap.getLayerIndex(LAYER_BLOCKS);\r\n                        let t:Phaser.Tile = this.tilemap.getTile(tx, ty - 1, blocks_layer);\r\n                        if(t) {\r\n                            console.log(\"Ooooh we jump-hit something: \" + t.index);\r\n                            // - Check to see if that thing is bound to an active object\r\n                            //   Use block objects for this, you can detect block object through tile if the type is active.\r\n                            //   You can retrieve tile through block object.\r\n                            //   Currently two active block objects only: brick, question block.\r\n                            if(t.properties.activeBlock !== undefined) {\r\n                                // - Call function: hit_tile->activeObject->hit(player)\r\n                                t.properties.activeBlock.hit(this);\r\n                                // Hit tile does the rest.   \r\n                            }\r\n                        } else {\r\n                            console.log(\"We have nothing above. Need motion correction!\");\r\n                            b_sfx_bump = false;\r\n                        }\r\n                    } else {\r\n                        console.log(\"Ty = 0 and it detected hitting. This shouldn't happen once I unblock the world top edge.\");\r\n                        b_sfx_bump = false;\r\n                    }\r\n                    if(b_sfx_bump) {\r\n                        sfx.bump.play();\r\n                    }\r\n                }\r\n                if(this.sprite.body.velocity.y >= 0.0) {\r\n                    this.isFalling = true;\r\n                }\r\n            } else if(is_dblocked) {\r\n                this.isJumping = false;\r\n                this.isFalling = false;    \r\n            }\r\n        }\r\n        \r\n        // Horizontal Motion \r\n        let WalkSpeed = MARIO_WALK_SPEED;\r\n        let WalkAccel = MARIO_WALK_ACCEL;\r\n        let BrakeAccelMul = MARIO_BRAKING_ACCEL_MUL;\r\n        let WalkFPS = MARIO_WALK_FPS;\r\n        if(this.actionInput) {\r\n            WalkSpeed = MARIO_RUN_SPEED;\r\n            WalkAccel = MARIO_RUN_ACCEL;\r\n            WalkFPS = MARIO_RUN_FPS;\r\n        }\r\n        let accel: number = is_braking? WalkAccel * BrakeAccelMul : WalkAccel;\r\n        if(this.horizMovement > 0.0) {          // Right Direction\r\n            if(!is_rblocked) {\r\n                this.hspeed = Math.min(WalkSpeed, this.hspeed + (accel * phaser.time.physicsElapsed));\r\n            } else {\r\n                this.hspeed = 1.0;\r\n            }\r\n        } else if(this.horizMovement < 0.0) {   // Left Direction\r\n            if(!is_lblocked) {\r\n                this.hspeed = Math.max(-WalkSpeed, this.hspeed - (accel * phaser.time.physicsElapsed));\r\n            } else {\r\n                this.hspeed = -1.0;\r\n            }\r\n        } else {                                // No Direction\r\n            if(this.hspeed > 0.0) {\r\n                if(!is_rblocked) {\r\n                    if(!this.isJumping) { // no slow down while jumping\r\n                        this.hspeed = Math.max(0.0, this.hspeed - (WalkAccel * phaser.time.physicsElapsed));\r\n                    }\r\n                } else {\r\n                    this.hspeed = 0;\r\n                }\r\n            } else if(this.hspeed < 0.0) {\r\n                if(!is_lblocked) {\r\n                    if(!this.isJumping) {  // no slow down while jumping\r\n                        this.hspeed = Math.min(0.0, this.hspeed + (WalkAccel * phaser.time.physicsElapsed));\r\n                    }\r\n                } else {\r\n                    this.hspeed = 0;\r\n                }\r\n            }\r\n        }\r\n        \r\n        // Frame Animation\r\n        if(this.isJumping) {\r\n            if(this.sprite.animations.name !== 'jump') {\r\n                this.sprite.animations.play('jump');\r\n            }\r\n        } else if(is_braking) {\r\n            if(this.sprite.animations.name !== 'brake') {\r\n                this.sprite.animations.play('brake');\r\n            }\r\n        } else if(Math.abs(this.hspeed) > 0.0) {\r\n            this.fspeed = Math.min(Math.ceil((Math.abs(this.hspeed) / WalkSpeed) * (WalkFPS - 5)) + 5, WalkFPS);\r\n            if(this.sprite.animations.name !== 'run') {\r\n                this.sprite.animations.play('run', this.fspeed);\r\n            } else if(this.sprite.animations.currentAnim.speed !== this.fspeed) {\r\n                this.sprite.animations.currentAnim.speed = this.fspeed;\r\n            }\r\n        } else {\r\n            if(this.sprite.animations.name !== 'idle') {\r\n                this.sprite.animations.play('idle');\r\n            }\r\n        }\r\n        \r\n        // Body Updates\r\n        this.sprite.body.velocity.x = this.hspeed;\r\n        this.sprite.body.velocity.y = clamp(this.sprite.body.velocity.y, -MAX_SPEED, MAX_SPEED);\r\n        \r\n        if(!this.isJumping) {\r\n            if(this.hspeed > 0.0) {\r\n                this.sprite.scale.x = is_braking? -2.0 : 2.0;\r\n            } else if(this.hspeed < 0.0) {\r\n                this.sprite.scale.x = is_braking? 2.0 : -2.0;\r\n            }\r\n        }\r\n        \r\n        if(debugBar) {\r\n            debugBar.text = \"Blocked  left right up down: \";\r\n            debugBar.text += (this.sprite.body.blocked.left? \"Yes \" : \"No \");\r\n            debugBar.text += (this.sprite.body.blocked.right? \"Yes \" : \"No \");\r\n            debugBar.text += (this.sprite.body.blocked.up? \"Yes \" : \"No \");\r\n            debugBar.text += (this.sprite.body.blocked.down? \"Yes \" : \"No \");\r\n        }\r\n    }\r\n    \r\n    public debugRender():void {\r\n        phaser.debug.body(this.sprite);\r\n    }\r\n};\r\n\r\ndocument.body.innerHTML = '';\r\n \r\nlet game = new SMBGame();\r\n"]}